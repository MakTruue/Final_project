name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/project.notes-api-v2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./notes-app        # 👈 путь к папке с Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:v1.${{ github.run_number }}

      - name: Update deployment.yaml with new image tag
        run: |
          sed -i "s|image:.*|image: ${{ env.IMAGE_NAME }}:v1.${{ github.run_number }}|" notes-app/k8s/deployment.yaml

      - name: Copy manifests to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "notes-app/k8s/*"
          target: "~/final-project/k8s/"

      - name: Deploy to Kubernetes via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/final-project/k8s
            kubectl apply -f postgres.yaml
            kubectl apply -f deployment.yaml
            kubectl apply -f ingress.yaml

#      - name: Set up kubeconfig
#        run: |
#          mkdir -p $HOME/.kube
#          printf "%s" "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > $HOME/.kube/config
#
#      - name: Deploy to Kubernetes
#        run: |
#          kubectl apply -f notes-app/k8s/deployment.yaml
#          kubectl apply -f notes-app/k8s/postgres.yaml
#          kubectl apply -f notes-app/k8s/ingress.yaml
